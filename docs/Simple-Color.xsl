<?xml version="1.0" ?> 

<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

  This is a sample transform file for project statistics generated by the
  XML export feature of the Project Line Counter application.

  See http://www.wndtabs.com/plc/ for more information.

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

<!DOCTYPE xsl:stylesheet [ 
	<!ENTITY nbsp "&#160;"> 
]> 
 
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">

<!-- create a map of file ids: used later to detect files that appear more than once -->
<xsl:key match="/statistics/project/file" use="@id" name="file-ids"/>

<xsl:template match="/statistics">
	<html>
		<style>
			.filestats { 
				color: #000090;
			}
			.filestats-heading { 
				font-family: Helvetica;
				font-size: 12pt;
				font-weight: bold;
				text-align: center;
				color: #000040;
				background-color: #A8B4D8; 				
			}
			.filestats-total { 
				color: #002020;
				background-color: #90B498; 				
				font-weight: bold;
			}
			.repeated-file { 
				font-style: italic; 
				color: #000060;
			}
			.project-title {
				color: #900000;
				font-size: 14pt;
				font-weight: bold;
			}
			.project-name {
				font-size: 12pt;
				font-weight: bold;
			}

		</style>
		<body>
			<!-- test for old MSXML -->
		    <xsl:if test="1=2">
			    <font color="red">IF YOU SEE THIS LINE</font><br/>
			    ..then you are probably running IE5/IE5.5 without the MSXML update.  
			    The stylesheet will not render properly.<br/>
			    Please refer to the Line Counter documentation for instructions about upgrading
			    your version of MSXML.
		    </xsl:if>

			<h1>Project Statistics Report</h1>
			<p>Generated by: <i>Project Line Counter v<xsl:value-of select="@plc_ver"/></i> on <b><xsl:value-of select="@date"/></b></p>

			<xsl:for-each select="project">
				<br/>
				<table border="0">
					<tr>
						<td>
							<table border="0"><tr><td class="project-title">Project:&nbsp;&nbsp;</td><td class="project-name"><xsl:value-of select="@path"/></td></tr></table>
						</td>
					</tr>
					<tr>
						<table border="1" cellpadding="2" cellspacing="0" class="filestats">
							<!-- headings -->
							<tr class="filestats-heading">
								<td rowspan="2">File Name</td>
								<td colspan="5">Lines</td>
							</tr>
							<tr class="filestats-heading">
								<td>Total</td>
								<td>Code</td>
								<td>Comments</td>
								<td>Mixed</td>
								<td>Blank</td>
							</tr>
							<xsl:for-each select="file">
								<tr>
									<!-- repeated file? (will have more than one bucket at this id) -->
									<xsl:if test="key('file-ids', @id)[2]"> 
        	                                                                <xsl:attribute name="class">
	                                                                        	repeated-file
        	                                                                </xsl:attribute>
	                                                                </xsl:if>
									<td><xsl:value-of select="name"/><xsl:value-of select="ext"/></td>
									<td><xsl:value-of select="lines-total"/></td>
									<xsl:variable name="total" select="lines-total"/>
									<td><xsl:call-template name="num_and_percent"><xsl:with-param name="val" select="lines-code"    /><xsl:with-param name="total" select="lines-total"/></xsl:call-template></td>
									<td><xsl:call-template name="num_and_percent"><xsl:with-param name="val" select="lines-comments"/><xsl:with-param name="total" select="lines-total"/></xsl:call-template></td>
									<td><xsl:call-template name="num_and_percent"><xsl:with-param name="val" select="lines-mixed"   /><xsl:with-param name="total" select="lines-total"/></xsl:call-template></td>
									<td><xsl:call-template name="num_and_percent"><xsl:with-param name="val" select="lines-blank"   /><xsl:with-param name="total" select="lines-total"/></xsl:call-template></td>
								</tr>
							</xsl:for-each>

							<!-- summary -->
								<tr class="filestats-total">
									<td>Total:</td>
									<xsl:variable name="total" select="sum(file/lines-total)"/>
									<td><xsl:value-of select="$total"/></td>
									<td><xsl:call-template name="num_and_percent"><xsl:with-param name="val" select="sum(file/lines-code)"    /><xsl:with-param name="total" select="$total"/></xsl:call-template></td>
									<td><xsl:call-template name="num_and_percent"><xsl:with-param name="val" select="sum(file/lines-comments)"/><xsl:with-param name="total" select="$total"/></xsl:call-template></td>
									<td><xsl:call-template name="num_and_percent"><xsl:with-param name="val" select="sum(file/lines-mixed)"   /><xsl:with-param name="total" select="$total"/></xsl:call-template></td>
									<td><xsl:call-template name="num_and_percent"><xsl:with-param name="val" select="sum(file/lines-blank)"   /><xsl:with-param name="total" select="$total"/></xsl:call-template></td>
								</tr>

						</table>
					</tr>
					<tr>
						<td><p/></td>
					</tr>
				</table>
		        </xsl:for-each>

		<br/>
		<h2>Grand Total</h2>
						<table border="1" cellpadding="2" cellspacing="0" class="filestats">
							<!-- headings -->
							<tr class="filestats-heading">
								<td colspan="5">Lines</td>
							</tr>
							<tr class="filestats-heading">
								<td>Total</td>
								<td>Code</td>
								<td>Comments</td>
								<td>Mixed</td>
								<td>Blank</td>
							</tr>

							<!-- summary -->
								<tr class="filestats-total">
									<xsl:variable name="total" select="sum(project/file[generate-id(.)=generate-id(key('file-ids' ,@id)[1])]/lines-total)"/>
									<td><xsl:value-of select="$total"/></td>
									<td><xsl:call-template name="num_and_percent"><xsl:with-param name="val" select="sum(project/file[generate-id(.)=generate-id(key('file-ids' ,@id)[1])]/lines-code)"    /><xsl:with-param name="total" select="$total"/></xsl:call-template></td>
									<td><xsl:call-template name="num_and_percent"><xsl:with-param name="val" select="sum(project/file[generate-id(.)=generate-id(key('file-ids' ,@id)[1])]/lines-comments)"/><xsl:with-param name="total" select="$total"/></xsl:call-template></td>
									<td><xsl:call-template name="num_and_percent"><xsl:with-param name="val" select="sum(project/file[generate-id(.)=generate-id(key('file-ids' ,@id)[1])]/lines-mixed)"   /><xsl:with-param name="total" select="$total"/></xsl:call-template></td>
									<td><xsl:call-template name="num_and_percent"><xsl:with-param name="val" select="sum(project/file[generate-id(.)=generate-id(key('file-ids' ,@id)[1])]/lines-blank)"   /><xsl:with-param name="total" select="$total"/></xsl:call-template></td>
								</tr>
						</table>
		<font size="1">Grand totals factor out files appearing in multiple projects.</font>
		</body>
	</html>
</xsl:template>

<xsl:template name="num_and_percent">
	<xsl:param name="val"/>
	<xsl:param name="total"/>
	<xsl:value-of select="$val"/>
	<xsl:if test="$total > 0">
		<!-- note: it would have been easier to use 
			format-number(..., "#%")
		     but plain vanilla Xalan doesn't support formats.. :( -->
		(<xsl:value-of select="format-number(round($val * 100 div $total),'#0')"/>%)
	</xsl:if>
	<xsl:if test="$total = 0">
		(0%)
	</xsl:if>
</xsl:template>

</xsl:stylesheet>  
